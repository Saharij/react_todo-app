{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","components/TodosFilter.jsx","localStorage.js","App.js","index.js"],"names":["TodoItem","todo","handleTodoEdit","completedChange","handleRemove","useState","editMode","setEditMode","title","editTitle","setEditTitle","autoFocus","type","value","className","onKeyUp","keyCode","length","onChange","target","onDoubleClick","completed","onClick","htmlFor","TodoList","todos","toggleAll","handleCompletedChange","style","cursor","id","map","item","TodosFilter","onFilterChange","href","setLocalStorageItem","key","window","localStorage","setItem","JSON","stringify","App","todoList","setTodoList","filter","inputValue","setInputValue","useEffect","parse","getItem","completedTodos","filteredTodos","onSubmit","event","preventDefault","newTodo","Date","prevState","placeholder","nextState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef4fa1ad.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const TodoItem = ({\n  todo,\n  handleTodoEdit,\n  completedChange,\n  handleRemove,\n}) => {\n  const [editMode, setEditMode] = useState(false);\n  const [editTitle, setEditTitle] = useState(todo.title);\n\n  const changeMode = () => {\n    setEditMode(true);\n  };\n\n  const changeEditMode = ({ keyCode }) => {\n    if (editTitle.length > 1 && keyCode === 13) {\n      handleTodoEdit(todo, editTitle);\n      setEditMode(false);\n    } else if (keyCode === 27) {\n      setEditMode(false);\n    }\n  };\n\n  const handleInputChange = ({ target: { value } }) => {\n    setEditTitle(value);\n  };\n\n  return (\n    <>\n      {editMode ? (\n        <input\n          // eslint-disable-next-line\n          autoFocus\n          type=\"text\"\n          value={editTitle}\n          className=\"editing\"\n          onKeyUp={changeEditMode}\n          onChange={handleInputChange}\n        />\n      ) : (\n        <li\n          onDoubleClick={changeMode}\n          className={todo.completed ? 'completed' : 'list-item'}\n        >\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              onClick={() => {\n                completedChange(todo);\n              }}\n            />\n            <label htmlFor=\"title\">\n              {todo.title}\n            </label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              aria-label=\"Destroy\"\n              onClick={() => {\n                handleRemove(todo);\n              }}\n            />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n      )}\n    </>\n  );\n};\n","import { TodoItem } from './TodoItem';\n\nexport const TodoList = ({\n  todos,\n  toggleAll,\n  handleRemove,\n  handleTodoEdit,\n  handleCompletedChange,\n}) => {\n  return (\n    <section className=\"main\">\n      <label\n        htmlFor=\"toggle-all\"\n        style={{ cursor: 'pointer' }}\n      >\n        Mark all as complete\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          onClick={toggleAll}\n          className=\"toggle-all\"\n        />\n      </label>\n\n      <ul className=\"todo-list\">\n        {todos.map(item => {\n          return (\n            <TodoItem\n              completedChange={handleCompletedChange}\n              todo={item}\n              key={item.id}\n              handleRemove={handleRemove}\n              handleTodoEdit={handleTodoEdit}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n","export const TodosFilter = ({ onFilterChange }) => {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          onClick={() => {\n            onFilterChange('all');\n          }}\n          className=\"selected\"\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={() => {\n            onFilterChange('active');\n          }}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => {\n            onFilterChange('completed');\n          }}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n","export const getLocalStorageItem = (key) => {\n  return JSON.parse(window.localStorage.getItem(key));\n};\n\nexport const setLocalStorageItem = (key, value) => {\n  return window.localStorage.setItem(key, JSON.stringify(value));\n};\n","import { useEffect, useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\nimport { getLocalStorageItem, setLocalStorageItem } from './localStorage';\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  const [filter, onFilterChange] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    setTodoList(getLocalStorageItem('todos') || []);\n  }, []);\n\n  const handleInputChange = ({ target: { value } }) => {\n    setInputValue(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (inputValue.length > 1) {\n      const time = +new Date();\n      const newTodo = {\n        id: time,\n        title: inputValue,\n        completed: false,\n      };\n\n      setTodoList(prevState => {\n        setLocalStorageItem('todos', [...prevState, newTodo]);\n\n        return [...prevState, newTodo];\n      });\n      setInputValue('');\n    }\n  };\n\n  const handleCompletedChange = (todo) => {\n    setTodoList(prevState => {\n      const nextState = prevState.map(item => {\n        if (item.id === todo.id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return item;\n      });\n\n      setLocalStorageItem('todos', nextState);\n\n      return nextState;\n    });\n  };\n\n  const handleRemove = (todo) => {\n    setTodoList(prevState => {\n      const nextState = prevState.filter(item => item.id !== todo.id);\n\n      setLocalStorageItem('todos', nextState);\n\n      return nextState;\n    });\n  };\n\n  const handleTodoEdit = (todo, editTitle) => {\n    setTodoList(prevState => {\n      const nextState = prevState.map(item => {\n        if (item.id === todo.id) {\n          return {\n            ...todo,\n            title: editTitle,\n          };\n        }\n\n        return item;\n      });\n\n      setLocalStorageItem('todos', nextState);\n\n      return nextState;\n    });\n  };\n\n  const toggleAll = () => {\n    setTodoList(prevState => {\n      const nextState = prevState.map(item => {\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      });\n\n      setLocalStorageItem('todos', nextState);\n\n      return nextState;\n    });\n  };\n\n  const completedTodos = todoList.filter(item => !item.completed);\n\n  const filteredTodos = filter === 'all'\n    ? todoList\n    : todoList.filter(item => {\n      if (filter === 'active') {\n        return !item.completed;\n      }\n\n      return item.completed;\n    });\n\n  const completedRemove = () => {\n    setTodoList(prevState => {\n      const nextState = prevState.filter(item => !item.completed);\n\n      setLocalStorageItem('todos', nextState);\n\n      return nextState;\n    });\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n\n      <TodoList\n        todos={filteredTodos}\n        toggleAll={toggleAll}\n        handleRemove={handleRemove}\n        handleTodoEdit={handleTodoEdit}\n        handleCompletedChange={handleCompletedChange}\n      />\n\n      <footer className=\"footer\">\n        {completedTodos.length > 0 && (\n          <span className=\"todo-count\">\n            {completedTodos.length}\n            items left\n          </span>\n        )}\n\n        <TodosFilter\n          onFilterChange={onFilterChange}\n        />\n\n        <button\n          type=\"button\"\n          onClick={completedRemove}\n          className=\"clear-completed\"\n        >\n          Clear completed\n        </button>\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}